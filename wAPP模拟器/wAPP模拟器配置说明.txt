一、war包部署方法
1.利用eclipse将源代码打包成war包
1.将打包好的war包拷贝到tomcat根目录下的webapps子目录下（或者可以将源代码导入eclipse中，通过eclipse直接部署到tomcat的webapps目录下）
2.启动tomcat
3.如果要修改tomcat端口：
  默认端口是在tomcat根目录下的conf子目录下的server.xml中：
	<Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="8443" />
  找到port属性，修改即可（8080为tomcat默认端口）
4.tomcat服务启动后，浏览器中输入访问路径http://localhost:8080/，看到欢迎界面，则配置成功！
5.tomcat安装路径:\\10.148.136.29\td-rd-files\Department\ETCD\04...光伏\06 开发相关\00 开发工具\tomcat\

二、修改配置文件
1.部署成功并启动tomcat成功后需要修改配置文件，进入tomcat根目录下的webapps子目录，
此时多了一个app文件夹
2.进入app文件夹，根据路径（在app文件夹下）：WEB-INF\localIpFile.properties找到这个配置文件，
将localIp=10.148.140.240的值改成本机ip即可：localIp=xxx.xxx.xxx.xxx（填本机ip）
3.重新启动tomcat服务，使配置文件生效

三、tomcat的SSL配置（使tomcat支持https）
1. 在cmd中切换到jdk下面的bin目录下
2.在命令行中输入：keytool -genkey -alias tomcat -keyalg RSA -keypass 123456 -storepass 123456 -keystore app.keystore -validity 3600
keytool -genkey:将自动使用默认的算法生成公钥和私钥
-alias [名称]:给证书取别名
-keyalg [算法]:指定密钥的算法
-keystore [名称]:指定密钥库的名称
-validity [天数]:证书有效日期，默认是90天
-keypass [密码]:指定证书密码
-storepass [密码]:指定密钥库文件的密码
3.将证书导入JDK的证书信任库中
keytool -export -trustcacerts -alias tomcat -file app.cer -keystore app.keystore -storepass 123456
-file app.cer:证书文件所在的地址(如："D:/Program Files/tomcat 6.0/app.cert")
-keystore:指定证书库文件所在的地址(如："D:/Program Files/tomcat 6.0/conf/tomcat.keystore")
-storepass:密钥库的密码
4.配置tomcat
(1).打开tomcat安装目录下\conf\server.xml
(2).找到<!-- Define a SSL HTTP/1.1 Connector on port 8443 --> 
去掉之后的注释(<!-- -->)，并加上keystorePass和keystoreFile属性
修改之后:
<Connector port="443" protocol="HTTP/1.1" SSLEnabled="true"
               maxThreads="150" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" 
			   keystoreFile="D:/Program Files/tomcat 6.0/conf/tomcat.keystore"
			   keystorePass="xt19890208"/>
(3).还需修改下面2想配置，将redirectPort都修改为443(https的默认端口号)
<Connector port="8080" protocol="HTTP/1.1" 
               connectionTimeout="20000" 
               redirectPort="443" />
<Connector port="8009" protocol="AJP/1.3" redirectPort="443" />
(4).打开tomcat安装目录的conf目录下的web.xml
在</welcome-file-list>标签后面添加:
<security-constraint>
	<web-resource-collection>
		<web-resource-name>SSL</web-resource-name>
		<url-pattern>/*</url-pattern>
	</web-resource-collection>
	<user-data-constraint>
		<transport-guarantee>CONFIDENTIAL</transport-guarantee>
	</user-data-constraint>	
</security-constraint>
使得tomcat强制将http请求转换为https访问